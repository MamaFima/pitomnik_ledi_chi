from aiogram import types, Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from django.conf import settings
from django.db import IntegrityError
from asgiref.sync import async_to_sync
from users.models import PuppyRequest
from aiogram.utils.markdown import hbold

# –¢–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç —Ö–æ–∑—è–π–∫–∏ –ø–∏—Ç–æ–º–Ω–∏–∫–∞
OWNER_CHAT_ID = 183208176  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Ö–æ–∑—è–π–∫–∏

async def handle_puppy_request(message: types.Message):
    print(f"üê∂ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–•–æ—á—É —â–µ–Ω–∫–∞!' —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è {message.from_user.id}")  # ‚û°Ô∏è –û—Ç–ª–∞–¥–∫–∞
    print(f"üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∞–Ω–∫–µ—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}...")

    google_form_link = "https://forms.gle/YoVh3kjXgnZFXTmYA"
    form_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", url=google_form_link)]
        ]
    )

    await message.answer(
        "–ï—Å–ª–∏ –í—ã –æ—á–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Ö—É–∞—Ö—É–∞, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —â–µ–Ω–æ–∫ –í–∞–º –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥–æ–π–¥–µ—Ç, "
        "–º—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–∂–µ–º –í–∞–º. \n\n"
        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –í–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–Ω–∫–µ—Ç—É.",
        reply_markup=form_button
    )

async def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    bot = Bot(token=settings.BOT_TOKEN)
    try:
        await bot.send_message(chat_id=chat_id, text=text)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ö–æ–∑—è–π–∫–µ ({chat_id})")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")


def save_application_and_notify(data):
    print("üì° –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –≤ –ë–î...")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ –≤–æ–æ–±—â–µ
    try:
        application = PuppyRequest.objects.create(**data)
        print(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç {application.name} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î!")  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ



        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"üê∂ –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –Ω–∞ —â–µ–Ω–∫–∞!\n\n"
            f"üë§ {application.name}\n"
            f"üìç {application.city}, {application.country}\n"
            f"üìû {application.phone}\n"
            f"üé® –û–∫—Ä–∞—Å: {application.color}\n"
            f"‚öñ –í–µ—Å: {application.adult_weight}\n"
            f"üí∞ –ë—é–¥–∂–µ—Ç: {application.budget}\n"
            f"üöö –î–æ—Å—Ç–∞–≤–∫–∞: {'–î–∞' if application.delivery_needed else '–ù–µ—Ç'}\n\n"
            f"‚úç {application.purpose}\n"
        )

        print(f"üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Ö–æ–∑—è–π–∫–µ {OWNER_CHAT_ID}")  # ‚û°Ô∏è –û—Ç–ª–∞–¥–∫–∞
        async_to_sync(send_telegram_message)(OWNER_CHAT_ID, message_text)
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")  # ‚û°Ô∏è –û—Ç–ª–∞–¥–∫–∞

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
        return False

